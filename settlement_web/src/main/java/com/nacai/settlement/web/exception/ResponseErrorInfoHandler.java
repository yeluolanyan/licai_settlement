package com.nacai.settlement.web.exception;import com.nacai.settlement.api.entity.response.ResponseEntity;import com.nacai.settlement.api.entity.response.ResponseInfoInterface;import org.springframework.http.HttpStatus;import org.springframework.web.bind.annotation.ExceptionHandler;import org.springframework.web.bind.annotation.RestControllerAdvice;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;/** * Created by shan on 2018/6/4. */@RestControllerAdvicepublic class ResponseErrorInfoHandler {    @ExceptionHandler(value = ResponseErrorInfoException.class)    public ResponseEntity errorHandlerOverJson(HttpServletRequest request,                                               ResponseErrorInfoException exception) {        ResponseInfoInterface errorInfo = exception.getResponseInfoInterface();        ResponseEntity result = new ResponseEntity(errorInfo);        return result;    }    /**     * 捕获  RuntimeException 异常     * TODO  如果你觉得在一个 exceptionHandler 通过  if (e instanceof xxxException) 太麻烦     * TODO  那么你还可以自己写多个不同的 exceptionHandler 处理不同异常     *     * @param request  request     * @param e        exception     * @param response response     * @return 响应结果     */    @ExceptionHandler(RuntimeException.class)    public ResponseEntity runtimeExceptionHandler(HttpServletRequest request, final Exception e, HttpServletResponse response) {        response.setStatus(HttpStatus.BAD_REQUEST.value());        RuntimeException exception = (RuntimeException) e;        return new ResponseEntity("400", exception.getMessage());    }}